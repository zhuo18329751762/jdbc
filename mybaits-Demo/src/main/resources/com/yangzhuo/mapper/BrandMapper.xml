<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace:名称空间
-->
<mapper namespace="com.yangzhuo.mapper.BrandMapper">

<!--
数据库表的字段名称和实体类的属性名称不一样，则不能自动封装数据
解决方法一:起别名：对不一样的列名起别名，让别名和实体类的属性名一样    缺点:每次查询都要定义一次别名
解决方法二:定义sql片段  缺点:不灵活
resultMap:
    1:定义resultMap标签
    2:使用resultMap属性替换 resultType属性
-->
    <!--
    sql片段
    -->
<!--    <sql id="brand_column">-->
<!--        id, brand_name as brandName, company_name as companyName, ordered, description, status-->
<!--    </sql>-->

<!--    <select id="selectAll" resultType="com.yangzhuo.pojo.Brand">-->
<!--        select-->
<!--<include refid="brand_column"></include>-->
<!--        from tb_brand;-->
<!--    </select>-->


    <!--
        id:唯一标识
        type:映射的类型，支持别名
    -->
    <resultMap id="brandResultMap" type="com.yangzhuo.pojo.Brand">
        <!--
            id:完成主键字段的映射
                column:表的列名
                property:实体类的属性名
            result:完成一般字段的映射
            column:表的列名
                property:实体类的属性名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>



    <select id="selectAll" resultMap="brandResultMap">
    select
     *
    from tb_brand
    </select>


    <!--    <select id="selectAll" resultType="com.yangzhuo.pojo.Brand">-->
<!--        select id, brand_name as brandName, company_name as companyName, ordered, description, status-->
<!--        from tb_brand;-->
<!--    </select>-->



    <!--
    参数占位符
    1:#{};会将其替换为?为了防止sql注入
    2:${}会存在sql注入问题
    $使用时机:
            参数传递的时候
            表名或者列名不固定的情况下:${存在sql注入问题}
    参数类型：parameterType：可以省略
    特殊字符处理:
    1:转义字符
    2：CDATA区
    -->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand where id
<![CDATA[
<
]]>#id
    </select>

    <!--
        条件查询
    -->
<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where-->
<!--            status=#{status}-->
<!--        and company_name like #{companyName}-->
<!--        and brand_name like #{brandName}-->
<!--    </select>-->

    <!--
        动态条件查询
            if:条件查询
                test:逻辑表达式
            问题：
            * 恒等式
            *<where> 替换 where 关键字
    -->
        <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
#         where 1=1
            <where>

                <if test="status !=null">
                    and status=#{status}
                </if>

                <if test="companyName !=null and companyName !=''">
                    and company_name like #{companyName}
                </if>

                <if test="brandName !=null and brandName!=''">
                    and brand_name like #{brandName}
                </if>
            </where>


    </select>
    <!--
        单条件无条件查询
    -->
<!--    <select id="selectByConditionSingle" resultMap="brandResultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where-->
<!--        <choose>&lt;!&ndash;相当于switch&ndash;&gt;-->
<!--            <when test="status !=null">-->
<!--                status=#{status}-->
<!--            </when>&lt;!&ndash;相当于case&ndash;&gt;-->
<!--            <when test="companyName !=null and companyName !=''">-->
<!--                company_name like #{companyName}-->
<!--            </when>&lt;!&ndash;相当于case&ndash;&gt;-->
<!--            <when test="brandName !=null and brandName!=''">-->
<!--                brand_name like #{brandName}-->
<!--            </when>&lt;!&ndash;相当于case&ndash;&gt;-->
<!--            <otherwise>-->
<!--                1=1-->
<!--            </otherwise>-->
<!--        </choose>-->


<!--    </select>-->


    <!--
       单条件无条件查询
   -->
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose><!--相当于switch-->
            <when test="status !=null">
                status=#{status}
            </when><!--相当于case-->
            <when test="companyName !=null and companyName !=''">
                company_name like #{companyName}
            </when><!--相当于case-->
            <when test="brandName !=null and brandName!=''">
                brand_name like #{brandName}
            </when><!--相当于case-->
            </choose>
        </where>

    </select>

    <!--
        添加

    -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
              insert into tb_brand(brand_name,company_name,ordered,description,status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

    <!--
        修改
    -->
    <update id="update">
      update tb_brand
        <set>
            <if test="brandName!=null and brandName!=''">
                brand_name=#{brandName},
            </if>

            <if test="companyName!=null and companyName!=''">
                company_name=#{companyName},
            </if>

            <if test="description!=null and description!=''">
                description=#{description},
            </if>

            <if test="status!=null ">
                status=#{status},
            </if>

            <if test="ordered!=null">
                ordered=#{ordered},
            </if>
        </set>
            where id=#{id};
    </update>
</mapper>